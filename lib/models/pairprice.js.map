{
  "version": 3,
  "sources": [
    "pairprice.js"
  ],
  "names": [
    "Moment",
    "require",
    "BigNumber",
    "R",
    "RA",
    "utils",
    "BIG_0",
    "BIG_1",
    "ERRORS",
    "makeError",
    "DEFAULT_PROPS",
    "utc",
    "pair",
    "base",
    "quote",
    "rate",
    "note",
    "KEYS",
    "keysIn",
    "getProps",
    "pick",
    "isComment",
    "startsWith",
    "parseProps",
    "props",
    "isString",
    "parts",
    "splitAndTrim",
    "length",
    "TypeError",
    "INVALID_TERM",
    "keyParts",
    "split",
    "slice",
    "PairPrice",
    "constructor",
    "translationChain",
    "converted",
    "merged",
    "merge",
    "forEach",
    "key",
    "val",
    "sort",
    "prices",
    "a",
    "b",
    "compare",
    "other",
    "isBefore",
    "isAfter",
    "invert",
    "toISOString",
    "div",
    "setTranslationChain",
    "toObject",
    "options",
    "shallow",
    "yaml",
    "toFixed",
    "derived",
    "arrayToObjects",
    "stripFalsy",
    "toString",
    "module",
    "exports"
  ],
  "mappings": "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",
  "file": "pairprice.js",
  "sourceRoot": "../../src/models",
  "sourcesContent": [
    "const Moment = require('moment');\nconst BigNumber = require('bignumber.js');\nconst R = require('ramda');\nconst RA = require('ramda-adjunct');\n\nconst utils = require('../utils/models');\nconst { BIG_0, BIG_1 } = require('../utils/numbers');\nconst { ERRORS } = require('./constants');\nconst { makeError } = require('../utils/errors');\n\nconst DEFAULT_PROPS = {\n  utc: null,\n  pair: null,\n  base: null,\n  quote: null,\n  rate: BIG_0,\n  note: '',\n};\n\nconst KEYS = R.keysIn(DEFAULT_PROPS);\n\nconst getProps = R.pick(KEYS);\nconst isComment = R.startsWith('#');\n\n/**\n * Flexibly parse a props object, which can be a shortcut or an object.\n * @param {String|Object} props object or shortcut string\n * @return {Object} parsed object\n * @throws {TypeError} if shortcut cannot be parsed\n */\nfunction parseProps(props) {\n  if (RA.isString(props)) {\n    const parts = utils.splitAndTrim(props);\n    if (parts.length < 3) {\n      throw makeError(\n        TypeError,\n        ERRORS.INVALID_TERM,\n        `Invalid price history shortcut: ${props}`\n      );\n    }\n    const keyParts = parts[1].split('/');\n    if (keyParts.length < 2) {\n      throw makeError(\n        TypeError,\n        ERRORS.INVALID_TERM,\n        `Invalid price history pair: ${parts[1]}`\n      );\n    }\n    const note = (parts.length > 3 && isComment(parts[3])) ? parts[3].slice(1) : '';\n    return {\n      utc: parts[0],\n      base: keyParts[0],\n      pair: parts[1],\n      quote: keyParts[1],\n      rate: parts[2],\n      note,\n    };\n  }\n  return props;\n}\n\n/**\n * Represents a price for a pair at a specific date\n */\nclass PairPrice {\n  /**\n   * Flexibly create using either a shortcut or an object.\n   * @param {String|Object} props object or shortcut string\n   * @throws {TypeError} if shortcut cannot be parsed\n   */\n  constructor(props) {\n    this.translationChain = null;\n    const converted = parseProps(props);\n    const merged = R.merge(DEFAULT_PROPS, getProps(converted));\n\n    KEYS.forEach((key) => {\n      let val = merged[key];\n      if (key === 'utc') {\n        val = Moment(val);\n      }\n      if (key === 'rate') {\n        val = BigNumber(val);\n      }\n      this[key] = val;\n    });\n\n    if (!this.pair) {\n      this.pair = `${this.base}/${this.quote}`;\n    }\n  }\n\n  static sort(prices) {\n    prices.sort((a, b) => a.compare(b));\n    return prices;\n  }\n\n  compare(other) {\n    if (this.utc.isBefore(other.utc)) {\n      return -1;\n    }\n    if (this.utc.isAfter(other.utc)) {\n      return 1;\n    }\n\n    if (other.quote === this.quote) {\n      if (other.base === this.base) {\n        return 0;\n      }\n      return this.base < other.base ? -1 : 1;\n    }\n    return this.quote < other.quote ? -1 : 1;\n  }\n\n  /**\n   * Create a reversed version of this price\n   */\n  invert() {\n    return new PairPrice({\n      base: this.quote,\n      quote: this.base,\n      utc: this.utc.toISOString(),\n      rate: BIG_1.div(this.rate),\n      note: this.note,\n    });\n  }\n\n  /**\n   * Set the chain used to translate between pairs where no direct price is available.\n   * @param {Array<PairPrice>} prices\n   */\n  setTranslationChain(prices) {\n    this.translationChain = prices;\n  }\n\n  /**\n   * Get a representation of this object useful for logging or converting to yaml\n   * @param {Object} options - \"shallow\" or \"yaml\" reduce output of child objects if true\n   * @return {Object<String, *>}\n   */\n  toObject(options = {}) {\n    const {shallow, yaml} = options;\n    const props = {\n      pair: this.pair,\n      utc: this.utc.toISOString(),\n      base: this.base,\n      quote: this.quote,\n      rate: this.rate.toFixed(8),\n      note: this.note,\n    };\n    if (!yaml) {\n      props.derived = this.derived;\n      props.translationChain = utils.arrayToObjects(this.translationChain || [], shallow);\n    }\n    return utils.stripFalsy(props);\n  }\n\n  toString() {\n    return `PairPrice: ${this.utc.toISOString()} ${this.pair} ${this.rate}`;\n  }\n}\n\nmodule.exports = PairPrice;\n"
  ]
}
